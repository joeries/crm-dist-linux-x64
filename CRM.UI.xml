<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CRM.UI</name>
    </assembly>
    <members>
        <member name="T:CRM.Api.Controllers.AccountController">
            <summary>
            Account API
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.AccountController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL})">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.AccountController.Get(CRM.Api.Model.Account.GetRequest)">
            <summary>
            Get the current user information
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.AccountController.Login(CRM.Api.Model.Account.LoginRequest)">
            <summary>
            Login
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.AccountController.Logout(CRM.Api.Model.Account.LogoutRequest)">
            <summary>
            Logout
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.AccountController.ChangePassword(CRM.Api.Model.Account.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.AccountController.Update(CRM.Api.Model.Account.UpdateRequest)">
            <summary>
            Update the current user's information
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="T:CRM.Api.Controllers.ConfigurationsController">
            <summary>
            Configurations Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ConfigurationsController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ConfigurationsController.Get(CRM.Api.Model.Configurations.GetRequest)">
            <summary>
            Get configurations
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.ConfigurationsController.Update(CRM.Api.Model.Configurations.UpdateRequest)">
            <summary>
            Update configurations
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.FileController">
            <summary>
            通用功能/文件上传
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.FileController.Upload(CRM.Api.Model.File.UploadRequest)">
            <summary>
            文件上传
            </summary>
            <param name="request"></param>
            <param name="file"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.FileController.List(CRM.Api.Model.File.ListRequest)">
            <summary>
            获取文件列表
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.ForwardingRecordsController">
            <summary>
            Forwarding Records Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ForwardingRecordsController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ForwardingRecordsController.List(CRM.Api.Model.ForwardingRecords.ListRequest)">
            <summary>
            List forwarding records
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.AccountController">
            <summary>
            Manager Service/Account Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.AccountController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.AccountController.ChangePassword(CRM.Api.Model.Manager.Account.ChangePasswordRequest)">
            <summary>
            Change Password
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.CategoryController">
            <summary>
            Manager Service/Cat Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.CategoryController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.CategoryController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_category})">
            <summary>
            Create Cat
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.CategoryController.Delete(CRM.Api.Model.Manager.Category.DeleteRequest)">
            <summary>
            Delete Cat
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.CategoryController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_category})">
            <summary>
            Update Cat
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.CategoryController.List(CRM.Api.Model.Manager.Category.ListRequest)">
            <summary>
            List Cat
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.CategoryController.Pass(CRM.Api.Model.Manager.Category.PassRequest)">
            <summary>
            Pass Cat
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.ConfigController">
            <summary>
            Manager Service/Config Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_config})">
            <summary>
            Create Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.Delete(CRM.Api.Model.Manager.Config.DeleteRequest)">
            <summary>
            Delete Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_config})">
            <summary>
            Update Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.List(CRM.Api.Model.Manager.Config.ListRequest)">
            <summary>
            List Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.Get(CRM.Api.Model.Manager.Config.GetRequest)">
            <summary>
            Get Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ConfigController.Pass(CRM.Api.Model.Manager.Config.PassRequest)">
            <summary>
            Pass Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.ContentController">
            <summary>
            Manager Service/Content Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_content})">
            <summary>
            Create Content
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.Delete(CRM.Api.Model.Manager.Content.DeleteRequest)">
            <summary>
            Delete Content
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_content})">
            <summary>
            Update Content
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.List(CRM.Api.Model.Manager.Content.ListRequest)">
            <summary>
            List Content
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.Get(CRM.Api.Model.Manager.Content.GetRequest)">
            <summary>
            Get Content
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ContentController.Pass(CRM.Api.Model.Manager.Content.PassRequest)">
            <summary>
            Pass Content
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.EnumsController">
            <summary>
            Manager Service/Enum Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.EnumsController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.EnumsController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_enum})">
            <summary>
            Create Enum
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.EnumsController.Delete(CRM.Api.Model.Manager.Enums.DeleteRequest)">
            <summary>
            Delete Enum
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.EnumsController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_enum})">
            <summary>
            Update Enum
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.EnumsController.List(CRM.Api.Model.Manager.Enums.ListRequest)">
            <summary>
            List Enum
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.EnumsController.Pass(CRM.Api.Model.Manager.Enums.PassRequest)">
            <summary>
            Pass Enum
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.ModuleController">
            <summary>
            Manager Service/Module Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ModuleController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ModuleController.Delete(CRM.Api.Model.Manager.Module.DeleteRequest)">
            <summary>
            Delete Role
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.OrderCountersController">
            <summary>
            Manager Service/Order Counters Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrderCountersController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrderCountersController.List(CRM.Api.Model.Manager.OrderCounters.ListRequest)">
            <summary>
            List order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.OrdersController">
            <summary>
            Manager Service/Orders Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.Import(CRM.Api.Model.Manager.Orders.ImportRequest)">
            <summary>
            导入
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.order})">
            <summary>
            Create order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.Delete(CRM.Api.Model.Manager.Orders.DeleteRequest)">
            <summary>
            Delete order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.Set(CRM.Api.Model.Manager.Orders.SetRequest)">
            <summary>
            Set order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.order})">
            <summary>
            Update order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.List(CRM.Api.Model.Manager.Orders.ListRequest)">
            <summary>
            List order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.OrdersController.Pass(CRM.Api.Model.Manager.Orders.PassRequest)">
            <summary>
            Pass order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.PictureController">
            <summary>
            Manager Service/Picture Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_image})">
            <summary>
            Create Picture
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.Delete(CRM.Api.Model.Manager.Picture.DeleteRequest)">
            <summary>
            Delete Picture
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_image})">
            <summary>
            Update Picture
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.List(CRM.Api.Model.Manager.Picture.ListRequest)">
            <summary>
            List Picture
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.Get(CRM.Api.Model.Manager.Picture.GetRequest)">
            <summary>
            Get Picture
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PictureController.Pass(CRM.Api.Model.Manager.Picture.PassRequest)">
            <summary>
            Pass Picture
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.PowerController">
            <summary>
            Manager Service/Power Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PowerController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PowerController.List(CRM.Api.Model.Manager.Power.ListRequest)">
            <summary>
            List Config
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.ProductsController">
            <summary>
            Manager Service/Products Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ProductsController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ProductsController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.product})">
            <summary>
            Create product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ProductsController.Delete(CRM.Api.Model.Manager.Products.DeleteRequest)">
            <summary>
            Delete product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ProductsController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.product})">
            <summary>
            Update product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ProductsController.List(CRM.Api.Model.Manager.Products.ListRequest)">
            <summary>
            List product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.ProductsController.Pass(CRM.Api.Model.Manager.Products.PassRequest)">
            <summary>
            Pass product
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.PropertyController">
            <summary>
            Manager Service/Property Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PropertyController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.PropertyController.List(CRM.Api.Model.Manager.Property.ListRequest)">
            <summary>
            List Property
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:CRM.Api.Controllers.Manager.PropertyController.Update(System.Collections.Generic.Dictionary{System.String,System.String})" -->
        <member name="T:CRM.Api.Controllers.Manager.RoleController">
            <summary>
            Manager Service/Role Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.RoleController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.RoleController.Create(CRM.Api.Model.Manager.Role.CreateRequest{CRM.Common.Model.base_role})">
            <summary>
            Create Role
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.RoleController.Delete(CRM.Api.Model.Manager.Role.DeleteRequest)">
            <summary>
            Delete Role
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.RoleController.Update(CRM.Api.Model.Manager.Role.UpdateRequest{CRM.Common.Model.base_role})">
            <summary>
            Update Role
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.StockCountersController">
            <summary>
            Manager Service/Stock Counters Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StockCountersController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StockCountersController.List(CRM.Api.Model.Manager.StockCounters.ListRequest)">
            <summary>
            List order
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.StocksController">
            <summary>
            Manager Service/Stocks Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.stock})">
            <summary>
            Create stock
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.Import(CRM.Api.Model.Manager.Stocks.ImportRequest)">
            <summary>
            导入
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.Delete(CRM.Api.Model.Manager.Stocks.DeleteRequest)">
            <summary>
            Delete stock
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.Update(CRM.Api.Model.Manager.Stocks.UpdateRequest)">
            <summary>
            Update stock
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.List(CRM.Api.Model.Manager.Stocks.ListRequest)">
            <summary>
            List stock
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StocksController.Pass(CRM.Api.Model.Manager.Stocks.PassRequest)">
            <summary>
            Pass stock
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.StoresController">
            <summary>
            Manager Service/Stores Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StoresController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StoresController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.store})">
            <summary>
            Create store
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StoresController.Delete(CRM.Api.Model.Manager.Stores.DeleteRequest)">
            <summary>
            Delete store
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StoresController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.store})">
            <summary>
            Update store
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StoresController.List(CRM.Api.Model.Manager.Stores.ListRequest)">
            <summary>
            List store
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.StoresController.Pass(CRM.Api.Model.Manager.Stores.PassRequest)">
            <summary>
            Pass store
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.TableExtController">
            <summary>
            Manager Service/TableExt Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_extension})">
            <summary>
            Create TableExt
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.Delete(CRM.Api.Model.Manager.TableExt.DeleteRequest)">
            <summary>
            Delete TableExt
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.base_extension})">
            <summary>
            Update TableExt
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.List(CRM.Api.Model.Manager.TableExt.ListRequest)">
            <summary>
            List TableExt
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.Get(CRM.Api.Model.Manager.TableExt.GetRequest)">
            <summary>
            Get TableExt
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.TableExtController.Pass(CRM.Api.Model.Manager.TableExt.PassRequest)">
            <summary>
            Pass TableExt
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.UserController">
            <summary>
            Manager Service/User Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.Import(CRM.Api.Model.Manager.User.ImportRequest)">
            <summary>
            导入
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.v_base_user})">
            <summary>
            Create User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.Delete(CRM.Api.Model.Manager.User.DeleteRequest)">
            <summary>
            Delete User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.v_base_user})">
            <summary>
            Update User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.List(CRM.Api.Model.Manager.User.ListRequest)">
            <summary>
            List User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.Get(CRM.Api.Model.Manager.User.GetRequest)">
            <summary>
            Get User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.ReSet(CRM.Api.Model.Manager.User.ReSetRequest)">
            <summary>
            ReSet User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.UserController.Pass(CRM.Api.Model.Manager.User.PassRequest)">
            <summary>
            Pass User
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.Manager.WarehousesController">
            <summary>
            Manager Service/Warehouses Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.WarehousesController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.WarehousesController.Create(CRM.Api.Model.BaseRequest{CRM.Common.Model.warehouse})">
            <summary>
            Create warehouse
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.WarehousesController.Delete(CRM.Api.Model.Manager.Warehouses.DeleteRequest)">
            <summary>
            Delete warehouse
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.WarehousesController.Update(CRM.Api.Model.BaseRequest{CRM.Common.Model.warehouse})">
            <summary>
            Update warehouse
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.WarehousesController.List(CRM.Api.Model.Manager.Warehouses.ListRequest)">
            <summary>
            List warehouse
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.Manager.WarehousesController.Pass(CRM.Api.Model.Manager.Warehouses.PassRequest)">
            <summary>
            Pass warehouse
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.ReceivedSMSsController">
            <summary>
            SMS Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivedSMSsController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivedSMSsController.List(CRM.Api.Model.ReceivedSMSs.ListRequest)">
            <summary>
            List received SMS
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.ReceivingMobilesController">
            <summary>
            ReceivingMobiles Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.Create(CRM.Api.Model.ReceivingMobiles.CreateRequest)">
            <summary>
            Create a receiving mobile
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.Delete(CRM.Api.Model.ReceivingMobiles.DeleteRequest)">
            <summary>
            Delete one or more receiving mobiles
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.Update(CRM.Api.Model.ReceivingMobiles.UpdateRequest)">
            <summary>
            Update a receiving mobile
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.List(CRM.Api.Model.ReceivingMobiles.ListRequest)">
            <summary>
            List receiving mobiles
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.Pass(CRM.Api.Model.ReceivingMobiles.PassRequest)">
            <summary>
            Pass one or more receiving mobiles
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.ReceivingMobilesController.Get(CRM.Api.Model.ReceivingMobiles.GetRequest)">
            <summary>
            Get a receiving mobile
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Controllers.UsersController">
            <summary>
            Users Api
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.#ctor(System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Ctor
            </summary>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Import(CRM.Api.Model.Users.ImportRequest)">
            <summary>
            Import users from Excel file
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Create(CRM.Api.Model.Users.CreateRequest)">
            <summary>
            Create a user
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Delete(CRM.Api.Model.Users.DeleteRequest)">
            <summary>
            Delete one or more users
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Update(CRM.Api.Model.Users.UpdateRequest)">
            <summary>
            Update a user
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.List(CRM.Api.Model.Users.ListRequest)">
            <summary>
            List users
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Get(CRM.Api.Model.Users.GetRequest)">
            <summary>
            Get a user
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Reset(CRM.Api.Model.Users.ResetRequest)">
            <summary>
            Reset one or more users' passwords
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:CRM.Api.Controllers.UsersController.Pass(CRM.Api.Model.Users.PassRequest)">
            <summary>
            Pass one or more users
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Middlewares.LoggingMiddleware">
            <summary>
            Middleware To Record Log
            </summary>
        </member>
        <member name="M:CRM.Api.Middlewares.LoggingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILogger{CRM.Api.Middlewares.LoggingMiddleware},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="logger"></param>
        </member>
        <member name="M:CRM.Api.Middlewares.LoggingMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Middlewares.LoggingMiddlewareExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.Api.Middlewares.LoggingMiddlewareExtensions.UseLogging(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Middlewares.ValidationMiddleware">
            <summary>
            Middleware To Validate Request
            </summary>
        </member>
        <member name="M:CRM.Api.Middlewares.ValidationMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Configuration.IConfiguration,System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IBLL},System.Collections.Generic.Dictionary{System.String,CRM.BLL.Interface.IDataCache})">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="configuration"></param>
            <param name="dicBLL"></param>
        </member>
        <member name="M:CRM.Api.Middlewares.ValidationMiddleware.InvokeAsync(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.Api.Middlewares.ValidationMiddlewareExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.Api.Middlewares.ValidationMiddlewareExtensions.UseValidation(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:CRM.UI.Controllers.ErrorController">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.UI.Controllers.ErrorController.#ctor(Microsoft.Extensions.Logging.ILogger{CRM.UI.Controllers.ErrorController})">
            <summary>
            
            </summary>
            <param name="logger"></param>
        </member>
        <member name="M:CRM.UI.Controllers.ErrorController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CRM.UI.Controllers.ErrorController.NotManager">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CRM.UI.Controllers.ErrorController._404">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:CRM.UI.Controllers.ErrorController.ApiNotOk">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:CRM.UI.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.UI.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:CRM.UI.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:CRM.UI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:CRM.UI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
